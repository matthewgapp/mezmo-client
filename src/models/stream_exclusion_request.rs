/*
 * Log Analysis API
 *
 * *REST API to send log data, export data and manage configuration*  To utilize the inline testing functionality here, please go into your Mezmo account and add the following address to your CORS Origins page: `https://docs.mezmo.com`. 
 *
 * The version of the OpenAPI document: 2.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// StreamExclusionRequest : 



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct StreamExclusionRequest {
    #[serde(rename = "hosts", skip_serializing_if = "Option::is_none")]
    pub hosts: Option<Vec<String>>,
    #[serde(rename = "apps", skip_serializing_if = "Option::is_none")]
    pub apps: Option<Vec<String>>,
    #[serde(rename = "title")]
    pub title: String,
    #[serde(rename = "active", skip_serializing_if = "Option::is_none")]
    pub active: Option<bool>,
    #[serde(rename = "indexonly", skip_serializing_if = "Option::is_none")]
    pub indexonly: Option<bool>,
    /// Search query.
    #[serde(rename = "query", skip_serializing_if = "Option::is_none")]
    pub query: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
}

impl StreamExclusionRequest {
    /// 
    pub fn new(title: String) -> StreamExclusionRequest {
        StreamExclusionRequest {
            hosts: None,
            apps: None,
            title,
            active: None,
            indexonly: None,
            query: None,
            id: None,
        }
    }
}


