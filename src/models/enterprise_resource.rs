/*
 * Log Analysis API
 *
 * *REST API to send log data, export data and manage configuration*  To utilize the inline testing functionality here, please go into your Mezmo account and add the following address to your CORS Origins page: `https://docs.mezmo.com`. 
 *
 * The version of the OpenAPI document: 2.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct EnterpriseResource {
    /// Account number of the organization
    #[serde(rename = "account", skip_serializing_if = "Option::is_none")]
    pub account: Option<String>,
    /// Unique Id of the enterprise organization
    #[serde(rename = "enterprise", skip_serializing_if = "Option::is_none")]
    pub enterprise: Option<String>,
    /// Current retention period selected for the child organization
    #[serde(rename = "retention", skip_serializing_if = "Option::is_none")]
    pub retention: Option<i32>,
    /// The email of a user to be given owner privileges of an account.
    #[serde(rename = "owner", skip_serializing_if = "Option::is_none")]
    pub owner: Option<String>,
    /// Available log retention options for the child organization
    #[serde(rename = "retentionTiers", skip_serializing_if = "Option::is_none")]
    pub retention_tiers: Option<Vec<i32>>,
    /// The name of a plan.
    #[serde(rename = "plan", skip_serializing_if = "Option::is_none")]
    pub plan: Option<String>,
    /// A secret key which can be used to authenticate requests to Mezmo.
    #[serde(rename = "servicekey", skip_serializing_if = "Option::is_none")]
    pub servicekey: Option<String>,
}

impl EnterpriseResource {
    pub fn new() -> EnterpriseResource {
        EnterpriseResource {
            account: None,
            enterprise: None,
            retention: None,
            owner: None,
            retention_tiers: None,
            plan: None,
            servicekey: None,
        }
    }
}


