/*
 * Log Analysis API
 *
 * *REST API to send log data, export data and manage configuration*  To utilize the inline testing functionality here, please go into your Mezmo account and add the following address to your CORS Origins page: `https://docs.mezmo.com`. 
 *
 * The version of the OpenAPI document: 2.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct IndexRateAlertConfig {
    /// The number of lines required in order to trigger the alert.
    #[serde(rename = "max_lines", skip_serializing_if = "Option::is_none")]
    pub max_lines: Option<i32>,
    /// The number of standard deviations above the 30 day average lines in order to trigger the alert.
    #[serde(rename = "max_z_score", skip_serializing_if = "Option::is_none")]
    pub max_z_score: Option<i32>,
    /// Determines if you want alerts to be triggered if both the max lines and standard deviation have been triggered, or if one of the thresholds has been reached.
    #[serde(rename = "threshold_alert", skip_serializing_if = "Option::is_none")]
    pub threshold_alert: Option<ThresholdAlert>,
    /// Notify recipients once per hour, or once per day, (starting when the threshold is passed the first time) until the index rate drops below the thresholds. When the index rate drops below the thresholds, alerting stops.
    #[serde(rename = "frequency", skip_serializing_if = "Option::is_none")]
    pub frequency: Option<Frequency>,
    #[serde(rename = "channels", skip_serializing_if = "Option::is_none")]
    pub channels: Option<Box<crate::models::IndexRateAlertConfigChannels>>,
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
}

impl IndexRateAlertConfig {
    pub fn new() -> IndexRateAlertConfig {
        IndexRateAlertConfig {
            max_lines: None,
            max_z_score: None,
            threshold_alert: None,
            frequency: None,
            channels: None,
            enabled: None,
        }
    }
}

/// Determines if you want alerts to be triggered if both the max lines and standard deviation have been triggered, or if one of the thresholds has been reached.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ThresholdAlert {
    #[serde(rename = "separate")]
    Separate,
    #[serde(rename = "both")]
    Both,
}

impl Default for ThresholdAlert {
    fn default() -> ThresholdAlert {
        Self::Separate
    }
}
/// Notify recipients once per hour, or once per day, (starting when the threshold is passed the first time) until the index rate drops below the thresholds. When the index rate drops below the thresholds, alerting stops.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Frequency {
    #[serde(rename = "hourly")]
    Hourly,
    #[serde(rename = "daily")]
    Daily,
}

impl Default for Frequency {
    fn default() -> Frequency {
        Self::Hourly
    }
}

